diff -rubN poco-2013.2-tudresden/CMakeLists.txt poco-2013.2-cmake/CMakeLists.txt
--- poco-2013.2-tudresden/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/CMakeLists.txt	2014-03-05 14:48:05.000000000 +0100
@@ -0,0 +1,189 @@
+project(POCO)
+cmake_minimum_required(VERSION 2.8.12)
+
+macro(def_option name description value)
+	option(${name} "${description}" ${value})
+	if(${name})
+		add_definitions("-D${name}")
+		foreach(arg ${ARGN})
+			add_definitions("-D${arg}")
+		endforeach()
+	endif()
+endmacro()
+
+option(POCO_NO_TESTS "Do not build testsuites." OFF)
+option(POCO_NO_SAMPLES "Do not build samples." OFF)
+def_option(POCO_NO_WSTRING "Compile with -DPOCO_NO_WSTRING. Useful if your C++ 
+	compiler does not support std::wstring (such as uClibc-based systems)." OFF)
+def_option(POCO_NO_FPENVIRONMENT "Compile with -DPOCO_NO_FPENVIRONMENT. Useful 
+	if your C++ compiler has incomplete floating-point support (such as uClibc-based systems)." OFF)
+def_option(POCO_POQUITO "Omit a few features for smaller codesize when linking 
+	statically for embedded targets." OFF
+	POCO_NO_FILECHANNEL 
+	POCO_NO_SPLITTERCHANNEL 
+	POCO_NO_SYSLOGCHANNEL 
+	DPOCO_UTIL_NO_INIFILECONFIGURATION 
+	DPOCO_UTIL_NO_XMLCONFIGURATION )
+def_option(POCO_UNBUNDLED "Use system-provided zlib, pcre, expat and sqlite 
+	instead of bundled ones." OFF)
+def_option(POCO_NO_SHAREDMEMORY "Compile with -DPOCO_NO_SHAREDMEMORY. For 
+	systems that don't support shared memory API's, like uClibc-based Linux 
+	systems." OFF)
+def_option(POCO_NO_SHAREDLIBS "Compile with -DPOCO_NO_SHAREDLIBS. For systems 
+	that don't support shared library loading." OFF)
+
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${ARCHFLAGS}")
+
+option(POCO_ENABLE_MACOSX_FRAMEWORKS 
+	"Causes POCO Libraries to be built as OS X Frameworks" 
+	OFF )
+if(POCO_ENABLE_MACOSX_FRAMEWORKS)
+	set(HEADER_INSTALL_DESTINATION Headers)
+	set(CMAKE_INSTALL_NAME_DIR @executable_path/../Frameworks)
+else()
+	set(HEADER_INSTALL_DESTINATION include)
+	set(CMAKE_INSTALL_NAME_DIR @rpath)
+endif()
+
+if(NOT WIN32)
+	option(USE_CXX11 "Build with explicit c++ 11 support under GCC/LLVM" ON)
+	if(${USE_CXX11})
+		if( ${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU" 
+			OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang"
+			OR ${CMAKE_CXX_COMPILER_ID} STREQUAL "Intel" )
+			message(STATUS "Checking for C++11 / C++0x availability")
+			include(CheckCXXCompilerFlag)
+			CHECK_CXX_COMPILER_FLAG(-std=c++11 HAS_CXX11)
+			if(HAS_CXX11)
+				set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+				if(${CMAKE_SYSTEM_NAME} STREQUAL Darwin)
+					set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
+					set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++11")
+					set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
+				endif()
+				message(STATUS "C++11 found.")
+			else(HAS_CXX11)
+				message(STATUS "C++11 not found, checking C++0x.")
+				CHECK_CXX_COMPILER_FLAG(-std=c++0x HAS_CXX0X)
+				if(HAS_CXX0X)
+					set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
+					if(${CMAKE_SYSTEM_NAME} STREQUAL Darwin)
+						set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
+						set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++0x")
+						set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
+					endif()
+					message(STATUS "C++0x found.")
+				else()
+					message(FATAL_ERROR "Neither C++11 nor C++0x found.")
+				endif()
+			endif()
+		endif()
+	endif()
+endif()
+
+# Debug / Release related flags
+set(CMAKE_DEBUG_POSTFIX "d")
+#if(NOT CMAKE_BUILD_TYPE)
+#	set_directory_properties(PROPERTIES COMPILE_DEFINITIONS_DEBUG "_DEBUG=${DEBUGLEVEL}")
+#	set_directory_properties(PROPERTIES COMPILE_DEFINITIONS_RELEASE "NDEBUG")
+#endif()
+if(NOT WIN32)
+	if(CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "DEBUG" )
+		add_definitions("-D_DEBUG=${DEBUGLEVEL}")
+	else()
+		add_definitions("-DNDEBUG")
+	endif()
+endif()
+
+file(STRINGS libversion LIBVERSION)
+set(POCO_OSP_VERSION 2)
+#add_definitions(-DPOCO_NO_TEMPLATE_ICOMPARE) #inhibits build error in NetSSL_OpenSSL referencing String.h in Foundations
+
+file(STRINGS components POCO_COMPONENTS)
+
+# TODO reduce this list by implementing the rest of the poco build in cmake
+list(APPEND OMIT 
+	Data/ODBC
+	Data/SQLite
+	Data/MySQL
+	DNSSD/Default
+	OSP/Core
+	OSP/Crypto
+	OSP/Data
+	OSP/Data/ODBC
+	OSP/Data/SQLite
+	OSP/Data/MySQL
+	OSP/Net
+	OSP/NetSSL_OpenSSL
+	OSP/SecureWebServer
+	OSP/Shell
+	OSP/Shell/Client
+	OSP/WebEvent
+	OSP/WebServer
+	PageCompiler
+	PageCompiler/File2Page
+)
+if(APPLE OR WIN32)
+	# on os x or windows, we use bonjour, so omit the Avahi library
+	list(APPEND OMIT DNSSD/Avahi)
+else()
+	list(APPEND OMIT DNSSD/Bonjour)
+endif()
+
+list(REMOVE_ITEM POCO_COMPONENTS ${OMIT})
+
+set(POCO_EXPORTS PocoConfig)
+
+function(poco_install target)
+	install(TARGETS ${target} 
+		EXPORT ${POCO_EXPORTS}
+		FRAMEWORK DESTINATION frameworks
+		LIBRARY DESTINATION lib
+		RUNTIME DESTINATION bin
+	)
+	install(DIRECTORY include/ DESTINATION ${HEADER_INSTALL_DESTINATION} FILES_MATCHING PATTERN "*.h")
+endfunction()
+
+function(poco_add_library target)
+	add_library(${target} SHARED ${ARGN})
+
+	string(REGEX REPLACE "^Poco" "" name ${target})
+
+	set_target_properties(${target}
+		PROPERTIES
+		FRAMEWORK ${POCO_ENABLE_MACOSX_FRAMEWORKS}
+		VERSION ${LIBVERSION}
+		DEFINE_SYMBOL ${name}_EXPORTS
+	)
+	target_include_directories(${target} 
+		PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+	 	$<INSTALL_INTERFACE:$<INSTALL_PREFIX>/include>
+		PRIVATE src 
+	)
+endfunction()
+
+
+function(poco_subproject target)
+	foreach(lib ${ARGN})
+		if(NOT TARGET ${lib})
+			message(WARNING "Skipping subproject ${target} because dependency ${lib} is invalid.")
+			return()
+		endif()
+	endforeach()
+	file(GLOB_RECURSE INCLUDES "include/*.h")
+	aux_source_directory(src SOURCES)
+	
+	poco_add_library(${target} ${SOURCES} ${INCLUDES})
+	foreach(lib ${ARGN})
+		target_link_libraries(${target} PUBLIC ${lib})
+	endforeach()
+
+	poco_install(${target})
+endfunction()
+
+foreach(POCO_COMPONENT ${POCO_COMPONENTS})
+	add_subdirectory(${POCO_COMPONENT})
+endforeach()
+
+install(EXPORT ${POCO_EXPORTS} DESTINATION cmake)
+
diff -rubN poco-2013.2-tudresden/CppUnit/CMakeLists.txt poco-2013.2-cmake/CppUnit/CMakeLists.txt
--- poco-2013.2-tudresden/CppUnit/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/CppUnit/CMakeLists.txt	2014-03-04 15:20:00.000000000 +0100
@@ -0,0 +1,5 @@
+poco_subproject(CppUnit)
+
+if(WIN32)
+	add_subdirectory(WinTestRunner)
+endif()
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/CppUnit/WinTestRunner/CMakeLists.txt poco-2013.2-cmake/CppUnit/WinTestRunner/CMakeLists.txt
--- poco-2013.2-tudresden/CppUnit/WinTestRunner/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/CppUnit/WinTestRunner/CMakeLists.txt	2014-03-05 12:56:08.000000000 +0100
@@ -0,0 +1,3 @@
+poco_subproject(WinTestRunner CppUnit)
+target_compile_definitions(WinTestRunner PRIVATE _AFXDLL)
+target_link_libraries(WinTestRunner PRIVATE winmm)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Crypto/CMakeLists.txt poco-2013.2-cmake/Crypto/CMakeLists.txt
--- poco-2013.2-tudresden/Crypto/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Crypto/CMakeLists.txt	2014-03-04 15:26:32.000000000 +0100
@@ -0,0 +1,6 @@
+find_package(OpenSSL)
+if(NOT OPENSSL_FOUND)
+	return()
+endif()
+
+poco_subproject(PocoCrypto PocoFoundation ${OPENSSL_LIBRARIES})
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/DNSSD/Avahi/CMakeLists.txt poco-2013.2-cmake/DNSSD/Avahi/CMakeLists.txt
--- poco-2013.2-tudresden/DNSSD/Avahi/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/DNSSD/Avahi/CMakeLists.txt	2014-03-04 15:24:08.000000000 +0100
@@ -0,0 +1,7 @@
+find_package(Avahi)
+if(NOT Avahi_FOUND)
+	message(WARNING "Did not find Avahi library, will not build PocoDNSSDAvahi.")
+	return()
+endif()
+
+poco_subproject(PocoDNSSDAvahi PocoFoundation PocoDNSSD ${Avahi_LIBRARIES})
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/DNSSD/Bonjour/CMakeLists.txt poco-2013.2-cmake/DNSSD/Bonjour/CMakeLists.txt
--- poco-2013.2-tudresden/DNSSD/Bonjour/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/DNSSD/Bonjour/CMakeLists.txt	2014-03-05 14:51:25.000000000 +0100
@@ -0,0 +1,39 @@
+if(NOT APPLE AND NOT WIN32)
+	return()
+endif()
+unset(Dependencies)
+if(WIN32)
+	set(Bonjour_PATH_HINTS
+		${Bonjour_DIR}
+		"C:/Program Files/Bonjour SDK"
+		"C:/Program Files (x86)/Bonjour SDK"
+	)
+	find_library(bonjour_lib dnssd
+		HINTS ${Bonjour_PATH_HINTS}
+		PATH_SUFFIXES 
+			#Lib/x64
+			Lib/Win32
+	)
+	find_file(bonjour_header dns_sd.h 
+		HINTS 
+			${Bonjour_PATH_HINTS}
+		PATH_SUFFIXES
+			Include
+	)
+	message("${bonjour_lib}")
+	if(NOT bonjour_lib)
+		message(WARNING "Could not find dnssd.lib, please provide a path to the Bonjour SDK installation in Bonjour_DIR variable.")
+		return()
+	endif()
+	get_filename_component(Bonjour_INCLUDE_DIR ${bonjour_header} DIRECTORY)
+	add_library(Bonjour IMPORTED SHARED)
+	set_target_properties(Bonjour PROPERTIES 
+		IMPORTED_IMPLIB ${bonjour_lib}
+		INTERFACE_INCLUDE_DIRECTORIES ${Bonjour_INCLUDE_DIR}
+	)
+	set(Dependencies Bonjour)
+endif()
+
+poco_subproject(PocoDNSSDBonjour PocoFoundation PocoDNSSD ${Dependencies})
+
+set_target_properties(PocoDNSSDBonjour PROPERTIES DEFINE_SYMBOL Bonjour_EXPORTS)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/DNSSD/CMakeLists.txt poco-2013.2-cmake/DNSSD/CMakeLists.txt
--- poco-2013.2-tudresden/DNSSD/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/DNSSD/CMakeLists.txt	2014-03-04 15:23:12.000000000 +0100
@@ -0,0 +1 @@
+poco_subproject(PocoDNSSD PocoFoundation PocoNet)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Data/CMakeLists.txt poco-2013.2-cmake/Data/CMakeLists.txt
--- poco-2013.2-tudresden/Data/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Data/CMakeLists.txt	2014-03-04 15:22:08.000000000 +0100
@@ -0,0 +1 @@
+poco_subproject(PocoData PocoFoundation)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Foundation/CMakeLists.txt poco-2013.2-cmake/Foundation/CMakeLists.txt
--- poco-2013.2-tudresden/Foundation/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Foundation/CMakeLists.txt	2014-03-05 12:27:06.000000000 +0100
@@ -0,0 +1,79 @@
+
+
+file(GLOB_RECURSE INCLUDES include/*.h)
+
+aux_source_directory(src SOURCES)
+
+if(MINGW OR WIN32)
+	list(REMOVE_ITEM SOURCES
+		src/SyslogChannel.cpp
+	)
+	list(REMOVE_ITEM INCLUDES
+		include/SyslogChannel.h
+	)
+else()
+	list(REMOVE_ITEM SOURCES
+		src/WindowsConsoleChannel.cpp
+		src/EventLogChannel.cpp
+	)
+endif()
+if(NOT VMS)
+	list(REMOVE_ITEM SOURCES
+		src/OpcomChannel.cpp
+	)
+endif()
+
+set(ZLIB_SOURCES
+	src/adler32.c
+	src/compress.c
+	src/crc32.c
+	src/deflate.c
+#	src/gzio.c
+	src/infback.c
+	src/inffast.c
+	src/inflate.c
+	src/inftrees.c
+	src/trees.c
+	src/zutil.c
+)
+
+set(PCRE_SOURCES
+	src/pcre_chartables.c
+	src/pcre_compile.c
+	src/pcre_exec.c
+	src/pcre_fullinfo.c
+	src/pcre_globals.c
+	src/pcre_maketables.c
+	src/pcre_newline.c
+	src/pcre_ord2utf8.c
+	src/pcre_study.c
+	src/pcre_tables.c
+	src/pcre_try_flipped.c
+	src/pcre_ucd.c
+	src/pcre_valid_utf8.c
+	src/pcre_xclass.c
+)
+
+
+list(REMOVE_ITEM SOURCES
+	${PCRE_SOURCES} ${ZLIB_SOURCES}
+)
+set(platform_regex "(.*)_(UNIX|VMS|WIN32|WIN32U|WINCE|POSIX|C99|DEC|DUMMY|SUN|VX|Android|STD|HPUX)(.*)" )
+foreach(SOURCE_FILE ${SOURCES})
+	if(${SOURCE_FILE} MATCHES ${platform_regex})
+		set_source_files_properties(${SOURCE_FILE} PROPERTIES HEADER_FILE_ONLY true)
+	endif()
+endforeach()
+
+add_library(zlib STATIC ${ZLIB_SOURCES})
+add_library(PCRE STATIC ${PCRE_SOURCES})
+target_compile_definitions(PCRE PUBLIC "PCRE_STATIC")
+
+poco_add_library(PocoFoundation ${SOURCES} ${INCLUDES})
+target_link_libraries(PocoFoundation PRIVATE zlib PCRE)
+if(WIN32)
+	target_link_libraries(PocoFoundation PRIVATE iphlpapi)
+endif()
+
+
+poco_install(PocoFoundation)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Net/CMakeLists.txt poco-2013.2-cmake/Net/CMakeLists.txt
--- poco-2013.2-tudresden/Net/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Net/CMakeLists.txt	2014-03-05 12:39:50.000000000 +0100
@@ -0,0 +1,8 @@
+poco_subproject(PocoNet PocoFoundation)
+
+if(WIN32)
+	target_link_libraries(PocoNet PRIVATE 
+		ws2_32 #winsock2
+		iphlpapi
+	)
+endif()
diff -rubN poco-2013.2-tudresden/NetSSL_OpenSSL/CMakeLists.txt poco-2013.2-cmake/NetSSL_OpenSSL/CMakeLists.txt
--- poco-2013.2-tudresden/NetSSL_OpenSSL/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/NetSSL_OpenSSL/CMakeLists.txt	2014-03-04 15:25:46.000000000 +0100
@@ -0,0 +1,6 @@
+find_package(OpenSSL)
+if(NOT OpenSSL_FOUND)
+	return()
+endif()
+
+poco_subproject(PocoNetSSL PocoFoundation PocoCrypto PocoUtil PocoNet ${OPENSSL_LIBRARIES})
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/OSP/BundleAdmin/CMakeLists.txt poco-2013.2-cmake/OSP/BundleAdmin/CMakeLists.txt
--- poco-2013.2-tudresden/OSP/BundleAdmin/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/OSP/BundleAdmin/CMakeLists.txt	2014-03-04 10:49:52.000000000 +0100
@@ -0,0 +1,21 @@
+aux_source_directory(src SOURCES)
+
+add_library(com.appinf.osp.bundleadmin SHARED ${SOURCES})
+set_target_properties(com.appinf.osp.bundleadmin
+	PROPERTIES
+	VERSION ${POCO_OSP_VERSION}
+)
+
+target_link_libraries(com.appinf.osp.bundleadmin PocoFoundation PocoUtil PocoNet PocoXML PocoOSP PocoOSPWeb)
+target_include_directories(com.appinf.osp.bundleadmin 
+	PRIVATE src )
+
+install(TARGETS com.appinf.osp.bundleadmin 
+	RUNTIME DESTINATION bin
+	LIBRARY DESTINATION lib
+)
+
+add_custom_command(TARGET com.appinf.osp.bundleadmin POST_BUILD
+	bundle -o${CMAKE_CURRENT_BINARY_DIRECTORY}/../bundles ${CMAKE_CURRENT_SOURCE_DIRECTORY}/BundleAdmin.bndlspec
+	COMMENT "Bundling com.appinf.osp.bundleadmin"
+)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/OSP/BundleCreator/CMakeLists.txt poco-2013.2-cmake/OSP/BundleCreator/CMakeLists.txt
--- poco-2013.2-tudresden/OSP/BundleCreator/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/OSP/BundleCreator/CMakeLists.txt	2014-03-04 16:27:36.000000000 +0100
@@ -0,0 +1,10 @@
+aux_source_directory(src SOURCES)
+file(GLOB_RECURSE INCLUDES src/*.h) 
+
+add_executable(bundle ${SOURCES} ${INCLUDES})
+target_link_libraries(bundle PocoOSP PocoFoundation PocoUtil PocoZip PocoXML)
+
+install(TARGETS bundle
+	EXPORT ${POCO_EXPORTS}
+	RUNTIME DESTINATION bin
+)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/OSP/BundleSign/CMakeLists.txt poco-2013.2-cmake/OSP/BundleSign/CMakeLists.txt
--- poco-2013.2-tudresden/OSP/BundleSign/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/OSP/BundleSign/CMakeLists.txt	2014-03-05 12:43:40.000000000 +0100
@@ -0,0 +1 @@
+poco_subproject(PocoOSPBundleSign PocoOSP PocoZip PocoCrypto PocoUtil PocoXML PocoFoundation)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/OSP/CMakeLists.txt poco-2013.2-cmake/OSP/CMakeLists.txt
--- poco-2013.2-tudresden/OSP/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/OSP/CMakeLists.txt	2014-03-04 15:26:18.000000000 +0100
@@ -0,0 +1 @@
+poco_subproject(PocoOSP PocoFoundation PocoUtil PocoZip PocoXML)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/OSP/Web/CMakeLists.txt poco-2013.2-cmake/OSP/Web/CMakeLists.txt
--- poco-2013.2-tudresden/OSP/Web/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/OSP/Web/CMakeLists.txt	2014-03-05 12:53:34.000000000 +0100
@@ -0,0 +1,8 @@
+poco_subproject(PocoOSPWeb PocoFoundation PocoUtil PocoNet PocoXML PocoOSP)
+
+add_library(osp.web SHARED src/WebBundleActivator.cpp)
+target_link_libraries(osp.web PocoOSPWeb PocoOSP PocoUtil PocoXML PocoFoundation)
+add_custom_command(TARGET osp.web POST_BUILD
+	bundle -o${CMAKE_CURRENT_BINARY_DIRECTORY}/../bundles ${CMAKE_CURRENT_SOURCE_DIRECTORY}/WebBundle.bndlspec
+	COMMENT "Bundling osp.web"
+)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Util/CMakeLists.txt poco-2013.2-cmake/Util/CMakeLists.txt
--- poco-2013.2-tudresden/Util/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Util/CMakeLists.txt	2014-03-04 15:43:00.000000000 +0100
@@ -0,0 +1,15 @@
+aux_source_directory(src SOURCES)
+
+if(NOT WIN32)
+	list(REMOVE_ITEM SOURCES
+		src/WinRegistryConfiguration.cpp
+		src/WinRegistryKey.cpp
+		src/WinService.cpp
+	)
+endif()
+
+file(GLOB_RECURSE INCLUDES include/*.h) 
+
+poco_add_library(PocoUtil ${SOURCES} ${INCLUDES})
+target_link_libraries(PocoUtil PocoFoundation PocoXML)
+poco_install(PocoUtil)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/XML/CMakeLists.txt poco-2013.2-cmake/XML/CMakeLists.txt
--- poco-2013.2-tudresden/XML/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/XML/CMakeLists.txt	2014-03-04 15:33:46.000000000 +0100
@@ -0,0 +1,6 @@
+
+poco_subproject(PocoXML PocoFoundation)
+
+target_compile_options(PocoXML
+	PRIVATE -DXML_NS -DXML_DTD -DHAVE_EXPAT_CONFIG_H
+)
\ No newline at end of file
diff -rubN poco-2013.2-tudresden/Zip/CMakeLists.txt poco-2013.2-cmake/Zip/CMakeLists.txt
--- poco-2013.2-tudresden/Zip/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ poco-2013.2-cmake/Zip/CMakeLists.txt	2014-03-04 15:34:24.000000000 +0100
@@ -0,0 +1 @@
+poco_subproject(PocoZip PocoFoundation)
\ No newline at end of file
